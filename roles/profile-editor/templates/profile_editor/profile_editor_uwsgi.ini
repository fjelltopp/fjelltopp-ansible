[uwsgi]
{% if fjelltopp_env_type == 'local' %}
virtualenv = /var/www/profile_editor/.minikubevenv/profile_editor-mdGUZgCT/
{% else %}
virtualenv = /var/www/profile_editor/.venv/
{% endif %}
wsgi-file = /var/www/profile_editor/app.py

; generally flask apps expose the 'app' callable instead of 'application'
callable = app

; tell uWSGI to rewrite PATH_INFO and SCRIPT_NAME according to mount-points
manage-script-name = true

; bind to a socket
http = 0.0.0.0:5001
workers = 4
threads = 1
buffer-size = 32768

gevent = 1000
py-autoreload = 1
honour-stdin = true

{% if fjelltopp_env_type != 'local' %}
; https://www.velebit.ai/blog/tech-blog-uwsgi-json-logging/
; this will encode uwsgi messages into JSON, encode requests to JSON and leave application output unchanged
logger = default stdio
logger = applogger stdio
log-route = applogger {
log-route = default ^((?!\{).)*$
log-encoder = json:default {"time":"${micros}", "source":"uwsgi", "message":"${msg}"}
log-encoder = format:applogger ${msg}
log-encoder = nl
logger-req = stdio
log-format = "address":"%(addr)", "method":"%(method)", "protocol":"%(proto)", "resp_size":%(size), "req_body_size":%(cl), "resp_status":%(status), "resp_time":%(secs)"
log-req-encoder = format {"time":"${micros}", "source":"uwsgi-req", ${msg}}
log-req-encoder = nl
{% endif %}
