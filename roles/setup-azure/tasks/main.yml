---
# This should be run first, as the Key Vault and Registry are needed for the AKS setup and the Azure pipelines

- name: Get tenant_id for later
  azure.azcollection.azure_rm_subscription_info:
    all: true
  register: subscription_output

- name: Create a resource group
  azure_rm_resourcegroup:
    name: "{{ resource_group_name }}"
    location: "{{ azure_region }}"

- name: Create an azure container registry
  azure_rm_containerregistry:
    name: "{{acr_name}}"
    resource_group: "{{ resource_group_name }}"
    admin_user_enabled: true
    sku: Premium

- name: Create key vault
  azure_rm_keyvault:
    resource_group: "{{ resource_group_name }}"
    vault_name: "{{ vault_name }}"
    vault_tenant: "{{ subscription_output.subscriptions[0].tenant_id }}"
    sku:
      family: A
      name: standard
    access_policies:
      # Allow Ansible to read/write secrets    
      - tenant_id: "{{ subscription_output.subscriptions[0].tenant_id }}"
        object_id: "{{ vault_object_id }}"
        secrets:
          - set
          - get
          - list

# We have a KeyVault so can now get/generate the secrets we need to start
- name: Set list of secrets to handle
  set_fact:
    secrets:
      # ANSIBLE_NAME: AZURE-KEYVAULT-NAME
      ckan_superuser_password: ckan-superuser-password
      azure_db_admin_password: azure-db-admin-password
- name: Init missing secrets
  block:
    # For each secret, if it's not set in the inventory or already in the keyvault, generate a new one and store it in the Keyvault
    - name: Get Key Vault by name
      azure_rm_keyvault_info:
        resource_group: "{{ resource_group_name }}"
        name: "{{ vault_name }}"
      register: keyvault

    - name: Set key vault URI fact
      set_fact: keyvaulturi="{{ keyvault['keyvaults'][0]['vault_uri'] }}"

    - name: loop through secrets     
      include_tasks: roles/azure-secrets/azure-keyvault-loop-secrets.yml
      loop: "{{ secrets | dict2items(key_name='secret_key', value_name='vault_secret_key')  }}"
