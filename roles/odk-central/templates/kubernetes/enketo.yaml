---
apiVersion: v1
kind: Secret
metadata:
  name: enketo-config
data:
  config.json: "{{ lookup('template', 'templates/odk/enketo_config.json')| to_nice_json(ensure_ascii=False,indent=2) | b64encode }}"
type: Opaque

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: odk
    component: enketo
  name: enketo
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app: odk
      component: enketo
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app: odk
        component: enketo
    spec:
      containers:
        - env:
            - name: ENKETO_SRC_DIR
              value: /srv/src/enketo_express
          image: {{ enketo_image }}
          imagePullPolicy: Always
          name: enketo
          command: ['/bin/bash', '-c']
          args:
            - cp -f /etc/enekto/config.json /srv/src/enketo_express/config/;
              cp -f /etc/enekto/config.json /srv/src/enketo_express/config/config.json.template;
              /srv/src/enketo_express/setup/docker/start.sh
          ports:
            - containerPort: 8005
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: enketo-config
              mountPath: /etc/enekto/config.json
              subPath: config.json
      restartPolicy: Always
      volumes:
        - name: enketo-config
          secret:
            secretName: enketo-config


---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: odk
    component: enketo
  name: enketo
spec:
  ports:
    - name: "enketo"
      port: 8005
      targetPort: 8005
  selector:
    app: odk
    component: enketo
status:
  loadBalancer: {}

