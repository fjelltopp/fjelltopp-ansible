---
- name: Init missing secrets
  block:

    - name: Generate CKAN DS ro password
      set_fact:
        new_ckan_ds_ro_pass: "{{ lookup('community.general.random_string', length=32, special=false) }}"
      when: not ckan_ds_ro_pass|default(None)

    - name: Add ckan_ds_ro_pass to AWS Secrets Manager
      community.aws.aws_secret:
        region: "{{ aws_region }}"
        name: "{{ application_namespace }}_datastore_ro_dbuser_password"
        state: present
        secret_type: 'string'
        secret: "{{ new_ckan_ds_ro_pass }}"
      when: not ckan_ds_ro_pass|default(None)

    - name: Update ckan_ds_ro_pass
      set_fact:
        ckan_ds_ro_pass: "{{ new_ckan_ds_ro_pass }}"
      when: new_ckan_ds_ro_pass|default(None)

    - name: Generate CKAN DS rw password
      set_fact:
        new_ckan_ds_rw_pass: "{{ lookup('community.general.random_string', length=32, special=false) }}"
      when: not ckan_ds_rw_pass|default(None)

    - name: Add ckan_ds_rw_pass to AWS Secrets Manager
      community.aws.aws_secret:
        region: "{{ aws_region }}"
        name: "{{ application_namespace }}_datastore_dbuser_password"
        state: present
        secret_type: 'string'
        secret: "{{ new_ckan_ds_rw_pass }}"
      when: not ckan_ds_rw_pass|default(None)

    - name: Update ckan_ds_rw_pass
      set_fact:
        ckan_ds_rw_pass: "{{ new_ckan_ds_rw_pass }}"
      when: new_ckan_ds_rw_pass|default(None)

    - name: Generate CKAN postgres password
      set_fact:
        new_ckan_postgres_password: "{{ lookup('community.general.random_string', length=32, special=false) }}"
      when: not ckan_postgres_password|default(None)

    - name: Add ckan_postgres_password to AWS Secrets Manager
      community.aws.aws_secret:
        region: "{{ aws_region }}"
        name: "{{ application_namespace }}_ckan_dbuser_password"
        state: present
        secret_type: 'string'
        secret: "{{ new_ckan_postgres_password }}"
      when: not ckan_postgres_password|default(None)

    - name: Update ckan_postgres_password
      set_fact:
        ckan_ds_rw_pass: "{{ new_ckan_postgres_password }}"
      when: new_ckan_postgres_password|default(None)

    - name: Generate Beaker session secret
      set_fact:
        new_ckan_beaker_secret: "{{ lookup('community.general.random_string', length=25, special=false) }}"
      when: not ckan_beaker_secret|default(None)

    - name: Add ckan_beaker_secret to AWS Secrets Manager
      community.aws.aws_secret:
        region: "{{ aws_region }}"
        name: "{{ application_namespace }}_ckan_beaker_secret"
        state: present
        secret_type: 'string'
        secret: "{{ new_ckan_beaker_secret }}"
      when: not ckan_beaker_secret|default(None)

    - name: Update ckan_beaker_secret
      set_fact:
        ckan_beaker_secret: "{{ new_ckan_beaker_secret }}"
      when: new_ckan_beaker_secret|default(None)

    - name: Generate JWT keys
      community.crypto.openssl_privatekey:
        path: /tmp/jwt_ssh_rsa
        type: RSA
        size: 4096
        force: true
        return_content: true
      register: new_jwt_key
      when: not ckan_jwt_private_key|default(None)

    - name: Export JWT public key in PEM format
      community.crypto.openssl_publickey:
        privatekey_path: /tmp/jwt_ssh_rsa
        path: /tmp/jwt_rsa_public_key
        return_content: true
        force: true
      register: new_jwt_public_key
      when: not ckan_jwt_private_key|default(None)

    - name: Add ckan JWT key to AWS Secrets Manager
      community.aws.aws_secret:
        region: "{{ aws_region }}"
        name: "{{ application_namespace }}_jwt_private_key"
        state: present
        secret_type: 'string'
        secret: "{{ lookup('file', '/tmp/jwt_ssh_rsa') }}"
      when: not ckan_jwt_private_key|default(None)

    - name: Add ckan JWT public key to AWS Secrets Manager
      community.aws.aws_secret:
        region: "{{ aws_region }}"
        name: "{{ application_namespace }}_jwt_public_key"
        state: present
        secret_type: 'string'
        secret: "{{ new_jwt_public_key.publickey }}"
      when: not ckan_jwt_public_key|default(None)

    - name: Update ckan_jwt_private_key
      set_fact:
        ckan_jwt_private_key: "{{ lookup('file', '/tmp/jwt_ssh_rsa') }}"
      when: not ckan_jwt_private_key|default(None)
    
    - name: Update ckan_jwt_public_key
      set_fact:
        ckan_jwt_public_key: "{{ new_jwt_key.public_key }}"
      when: not ckan_jwt_public_key|default(None)

    - name: Generate API token secret
      set_fact:
        new_ckan_api_secret: "{{ lookup('community.general.random_string', length=64, special=false) }}"
      when: not ckan_api_secret|default(None)

    - name: Add ckan_api_secret to AWS Secrets Manager
      community.aws.aws_secret:
        region: "{{ aws_region }}"
        name: "{{ application_namespace }}_ckan_api_secret"
        state: present
        secret_type: 'string'
        secret: "{{ new_ckan_api_secret }}"
      when: not ckan_api_secret|default(None)

    - name: Update ckan_api_secret
      set_fact:
        ckan_api_secret: "{{ new_ckan_api_secret }}"
      when: new_ckan_api_secret|default(None)

    - name: Read Google Analytics private key
      set_fact:
        ckan_googleanalytics_private_key: "{{ lookup('amazon.aws.aws_secret', '{{ application_namespace }}_ckan_googleanalytics_private_key') }}"
      when: not ckan_googleanalytics_private_key|default(None))


  become: false
  when: fjelltopp_env_type != 'local'
