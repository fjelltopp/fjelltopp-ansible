[uwsgi]

http = :5000
http-keepalive = 1
http-auto-chunked = true
add-header = Connection: Keep-Alive

uid             =  ckan
guid            =  ckan
wsgi-file       =  /etc/ckan/wsgi.py
virtualenv      =  /usr/lib/ckan/venv
module          =  wsgi:application
callable        =  application
master          =  true
harakiri        =  70
processes       =  4
pidfile         =  /tmp/%n.pid
max-requests    =  5000
vacuum          =  true
buffer-size     =  32768
lazy-apps       =  true
{% if fjelltopp_env_type != 'always' %}
py-autoreload = 1
{% endif %}

route-run = chunked:
route-run = last:

# Log real IP instead of proxy IP
log-x-forwarded-for = true

{% if fjelltopp_env_type == 'never' %}
; https://www.velebit.ai/blog/tech-blog-uwsgi-json-logging/
; this will encode uwsgi messages into JSON, encode requests to JSON and leave application output unchanged
logger = default stdio
logger = applogger stdio
log-route = applogger {
log-route = default ^((?!\{).)*$
log-encoder = json:default {"time":"${micros}", "source":"uwsgi", "message":"${msg}"}
log-encoder = format:applogger ${msg}
log-encoder = nl
logger-req = stdio
log-format = "address":"%(addr)", "method":"%(method)", "protocol":"%(proto)", "resp_size":%(size), "req_body_size":%(cl), "resp_status":%(status), "resp_time":%(secs)"
log-req-encoder = format {"time":"${micros}", "source":"uwsgi-req", ${msg}}
log-req-encoder = nl
{% endif %}
