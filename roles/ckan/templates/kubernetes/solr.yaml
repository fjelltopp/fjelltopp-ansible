apiVersion: v1
kind: Secret
metadata:
  name: solr-schema
data:
  managed-schema: "{{ lookup('template', 'templates/ckan/solr_schema.xml') | b64encode }}"
type: Opaque

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: solr
  name: solr
spec:
{% if fjelltopp_env_type != 'local' %}
  storageClassName: "efs-client"
{% endif %}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: solr
  name: solr
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: solr
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: solr
    spec:
      securityContext:
        fsGroup: 8983
      containers:
        - image: {{ solr_image }}:{{ solr_image_tag }}
{% if fjelltopp_env_type == 'local' %}
          imagePullPolicy: IfNotPresent
{% else %}
          imagePullPolicy: Always
{% endif%}

          name: solr
          resources: {}
          volumeMounts:
            - mountPath: /opt/solr/server/solr/configsets/ckan/conf/managed-schema
              name: solr-schema
              subPath: managed-schema
              readOnly: true
            - mountPath: /opt/solr/server/solr/ckan/data
              name: solr-data
      restartPolicy: Always
      volumes:
        - name: solr-data
          persistentVolumeClaim:
            claimName: solr
        - name: solr-schema
          secret:
            secretName: solr-schema
status: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
  creationTimestamp: null
  labels:
    app: solr
  name: solr
spec:
  ports:
    - name: "8983"
      port: 8983
      targetPort: 8983
  selector:
    app: solr
status:
  loadBalancer: {}

