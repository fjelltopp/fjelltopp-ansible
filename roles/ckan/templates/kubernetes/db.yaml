apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: db
  name: pg-data
spec:
{% if fjelltopp_env_type != 'local' %}
  storageClassName: "efs-client"
{% endif %}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: db
    spec:
      containers:
        - env:
            - name: DS_RO_PASS
              value: "{{ ckan_ds_ro_pass }}"
            - name: PGDATA
              value: /var/lib/postgresql/data/db
            - name: POSTGRES_PASSWORD
              value: "{{ ckan_postgres_password }}"
            - name: POSTGRES_USER
              value: "ckan"
          image: "{{ ckan_db_image }}"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - ckan
          name: db
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pg-data
      restartPolicy: Always
      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: pg-data
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: db
  name: db
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: db
status:
  loadBalancer: {}

