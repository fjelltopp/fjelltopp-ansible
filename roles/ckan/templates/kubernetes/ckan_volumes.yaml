# Setup Azure Storage Class
{% if fjelltopp_cloud_provider == 'azure' %}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:  
  name: "{{ storage_class_name }}"
provisioner: file.csi.azure.com
volumeBindingMode: Immediate
allowVolumeExpansion: true
mountOptions:
  - uid=900
  - gid=900
{% endif %}

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ckan-storage
  creationTimestamp: null
  labels:
    app: ckan
spec:
{% if fjelltopp_env_type != 'local' %}  
  storageClassName: "{{ storage_class_name }}"
{% endif %}  
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  creationTimestamp: null
  labels:
    app: ckan
  name: ckan-webassets
spec:
{% if fjelltopp_env_type != 'local' %}  
  storageClassName: "{{ storage_class_name }}"
{% endif %}  
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: ckan
  name: ckan-resources
spec:
{% if fjelltopp_env_type != 'local' %}  
  storageClassName: "{{ storage_class_name }}"
{% endif %} 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
status: {}

# Local Only Volumes
{% if fjelltopp_env_type == 'local' %}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: localckan
  labels:
    app: ckan
spec:
  storageClassName: standard
  claimRef:
    name: localckan
    namespace: {{ application_namespace }}
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 20Gi
  hostPath:
    path: /minikube-host/

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: ckan
  name: localckan
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  volumeName: localckan
status: {}
{% endif %}
